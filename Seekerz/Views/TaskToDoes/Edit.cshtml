@model Seekerz.Models.TaskToDo

@{
    ViewData["Title"] = "Edit";
}

<h2 class="Mono">Edit Your Task</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="TaskToDoId" />
            <div class="form-group">
                <label>Task</label>
                <input asp-for="NewTask" class="form-control" />
                <span asp-validation-for="NewTask" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Complete Date</label>
                <input asp-for="CompleteDate" class="form-control" />
                <span asp-validation-for="CompleteDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsCompleted" class="checklabel" />Check if Complete @*@Html.DisplayNameFor(model => model.IsCompleted)*@
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label>Position</label> 
                <select asp-for="JobId" class="form-control" asp-items="ViewBag.JobId"></select>
                <span asp-validation-for="JobId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-info CreateButton" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-info BackButton">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
